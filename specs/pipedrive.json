{"basePath":"/v1","host":"api.pipedrive.com","info":{"title":"Pipedrive API v1"},"paths":{"/activities":{"delete":{"description":"Marks multiple activities as deleted.","parameters":[{"default":"","description":"Comma-separated IDs that will be deleted","in":"query","name":"ids","required":true,"type":"array"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple activities in bulk","tags":["Activities"]},"get":{"description":"Returns all activities assigned to a particular user","parameters":[{"default":"","description":"ID of the user who's activities to fetch. If omitted, the authorized user will be used. If 0, activities for all users in company will be fetched.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the filter to use (will narrow down results if used together with user_id parameter).","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"Type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the key_string parameter of ActivityTypes.","in":"query","name":"type","required":false,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Date in format of YYYY-MM-DD from which activities to fetch from.","in":"query","name":"start_date","required":false,"type":"date"},{"default":"","description":"Date in format of YYYY-MM-DD until which activities to fetch to.","in":"query","name":"end_date","required":false,"type":"date"},{"description":"Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done","enum":[0,1],"in":"query","name":"done","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get all activities assigned to a particular user","tags":["Activities"]},"post":{"description":"Adds a new activity. Includes more_activities_scheduled_in_context property in response's additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).","parameters":[{"default":"","description":"Subject of the activity","in":"formData","name":"subject","required":true,"type":"string"},{"default":"0","description":"Whether the activity is done or not. 0 = Not done, 1 = Done","enum":[0,1],"in":"formData","name":"done","required":false,"type":"enumerated"},{"default":"","description":"Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.","in":"formData","name":"type","required":true,"type":"string"},{"default":"","description":"Due date of the activity. Format: YYYY-MM-DD","in":"formData","name":"due_date","required":false,"type":"date"},{"default":"","description":"Due time of the activity in UTC. Format: HH:MM","in":"formData","name":"due_time","required":false,"type":"time"},{"default":"","description":"Duration of the activity. Format: HH:MM","in":"formData","name":"duration","required":false,"type":"time"},{"default":"","description":"ID of the user whom the activity will be assigned to. If omitted, the activity will be assigned to the authorized user.","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the deal this activity will be associated with","in":"formData","name":"deal_id","required":false,"type":"number"},{"default":"","description":"ID of the person this activity will be associated with","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"List of multiple persons (participants) this activity will be associated with. If omitted, single participant from person_id field is used. It requires a structure as follows: [{\"person_id\":1,\"primary_flag\":true}]","in":"body","name":"participants","required":false,"type":"json string"},{"default":"","description":"ID of the organization this activity will be associated with","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"Note of the activity (HTML format)","in":"formData","name":"note","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Add an activity","tags":["Activities"]}},"/activities/{id}":{"delete":{"description":"Deletes an activity","parameters":[{"default":"","description":"ID of the activity","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete an activity","tags":["Activities"]},"get":{"description":"Returns details of a specific activity.","parameters":[{"default":"","description":"ID of the activity","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get details of an activity","tags":["Activities"]},"put":{"description":"Modifies an activity. Includes more_activities_scheduled_in_context property in response's additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).","parameters":[{"default":"","description":"ID of the activity","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Subject of the activity. When omitted, will remain unchanged.","in":"formData","name":"subject","required":false,"type":"string"},{"default":"0","description":"Whether the activity is done or not. 0 = Not done, 1 = Done","enum":[0,1],"in":"formData","name":"done","required":false,"type":"enumerated"},{"default":"","description":"Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.","in":"formData","name":"type","required":false,"type":"string"},{"default":"","description":"Due date of the activity. Format: YYYY-MM-DD","in":"formData","name":"due_date","required":false,"type":"date"},{"default":"","description":"Due time of the activity in UTC. Format: HH:MM","in":"formData","name":"due_time","required":false,"type":"time"},{"default":"","description":"Duration of the activity. Format: HH:MM","in":"formData","name":"duration","required":false,"type":"time"},{"default":"","description":"ID of the user whom the activity will be assigned to","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the deal this activity will be associated with","in":"formData","name":"deal_id","required":false,"type":"number"},{"default":"","description":"ID of the person this activity will be associated with","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"List of multiple persons (participants) this activity will be associated with. If omitted, single participant from person_id field is used. It requires a structure as follows: [{\"person_id\":1,\"primary_flag\":true}]","in":"body","name":"participants","required":false,"type":"json string"},{"default":"","description":"ID of the organization this activity will be associated with","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"Note of the activity (HTML format). When omitted, will remain unchanged.","in":"formData","name":"note","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Edit an activity","tags":["Activities"]}},"/activityFields":{"get":{"description":"Return list of all fields for activity","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all fields for an activity","tags":["ActivityFields"]}},"/activityTypes":{"delete":{"description":"Marks multiple activity types as deleted.","parameters":[{"default":"","description":"Comma-separated activity type IDs to delete","in":"query","name":"ids","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple activity types in bulk","tags":["ActivityTypes"]},"get":{"description":"Returns all activity types","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all activity types","tags":["ActivityTypes"]},"post":{"description":"Adds a new activity type, returns the ID, the key_string and the order number of the newly added activity type upon success.","parameters":[{"default":"","description":"Name of the activity type","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Icon graphic to use for representing this activity type.","enum":["task","email","meeting","deadline","call","lunch","calendar","downarrow","document","smartphone","camera","scissors","cogs","bubble","uparrow","checkbox","signpost","shuffle","addressbook","linegraph","picture","car","world","search","clip","sound","brush","key","padlock","pricetag","suitcase","finish","plane","loop","wifi","truck","cart","bulb","bell","presentation"],"in":"formData","name":"icon_key","required":true,"type":"enumerated"},{"default":"","description":"A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).","in":"formData","name":"color","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Add new activity type","tags":["ActivityTypes"]}},"/activityTypes/{id}":{"delete":{"description":"Marks an activity type as deleted.","parameters":[{"default":"","description":"ID of the activity type","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete an activity type","tags":["ActivityTypes"]},"put":{"description":"Updates an activity type.","parameters":[{"default":"","description":"ID of the activity type","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the activity type","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"Icon graphic to use. Supported values: default, call, meeting, lunch, email, task, deadline. Additional supported values will be made available in the future.","in":"formData","name":"icon_key","required":false,"type":"enumerated string"},{"default":"","description":"A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).","in":"formData","name":"color","required":false,"type":"string"},{"default":"","description":"An order number for this activity type. Order numbers should be used to order the types in the activity type selections.","in":"formData","name":"order_nr","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Edit activity type","tags":["ActivityTypes"]}},"/authorizations":{"post":{"description":"Returns all authorizations for a particular user. Authorization objects contain the API tokens the user has with different company accounts in Pipedrive. These can be fetched without an API token but using the email and password of the user.","parameters":[{"default":"","description":"Email of the user","in":"formData","name":"email","required":true,"type":"string"},{"default":"","description":"Password of the user","in":"formData","name":"password","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get all authorizations for a user","tags":["Authorizations"]}},"/currencies":{"get":{"description":"Returns all supported currencies in given account which should be used when saving monetary values with other objects. The 'code' parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.","parameters":[{"default":"","description":"Optional search term that is searched for from currency's name and/or code.","in":"query","name":"term","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get all supported currencies","tags":["Currencies"]}},"/dealFields":{"delete":{"description":"Marks multiple fields as deleted.","parameters":[{"default":"","description":"Comma-separated field IDs to delete","in":"query","name":"ids","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple deal fields in bulk","tags":["DealFields"]},"get":{"description":"Returns data about all fields deals can have","parameters":[{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get all deal fields","tags":["DealFields"]},"post":{"description":"Adds a new deal field","parameters":[{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Type of the field.<dl class=\"fields-list\"><dt>varchar</dt><dd>Text (up to 255 characters)</dd><dt>varchar_auto</dt><dd>Autocomplete text (up to 255 characters)</dd><dt>text</dt><dd>Long text (up to 65k characters)</dd><dt>double</dt><dd>Numeric value</dd><dt>monetary</dt><dd>Monetary field (has a numeric value and a currency value)</dd><dt>date</dt><dd>Date (format YYYY-MM-DD)</dd><dt>set</dt><dd>Options field with a possibility of having multiple chosen options</dd><dt>enum</dt><dd>Options field with a single possible chosen option</dd><dt>user</dt><dd>User field (contains a user ID of another Pipedrive user)</dd><dt>org</dt><dd>Organization field (contains an organization ID which is stored on the same account)</dd><dt>people</dt><dd>Person field (contains a person ID which is stored on the same account)</dd><dt>phone</dt><dd>Phone field (up to 255 numbers and/or characters)</dd><dt>time</dt><dd>Time field (format HH:MM:SS)</dd><dt>timerange</dt><dd>Time-range field (has a start time and end time value, both HH:MM:SS)</dd><dt>daterange</dt><dd>Date-range field (has a start date and end date value, both YYYY-MM-DD)</dd></dl>","enum":["varchar","varchar_auto","text","double","monetary","date","set","enum","user","org","people","phone","time","timerange","daterange"],"in":"formData","name":"field_type","required":true,"type":"enumerated"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Add a new deal field","tags":["DealFields"]}},"/dealFields/{id}":{"delete":{"description":"Marks a field as deleted.","parameters":[{"default":"","description":"ID of the field to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a deal field","tags":["DealFields"]},"get":{"description":"Returns data about a specific deal field.","parameters":[{"default":"","description":"ID of the field to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one deal field","tags":["DealFields"]},"put":{"description":"Updates a deal field","parameters":[{"default":"","description":"ID of the field to update.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Update a deal field","tags":["DealFields"]}},"/deals":{"delete":{"description":"Marks multiple deals as deleted.","parameters":[{"default":"","description":"Comma-separated IDs that will be deleted","in":"query","name":"ids","required":true,"type":"array"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple deals in bulk","tags":["Deals"]},"get":{"description":"Returns all deals","parameters":[{"default":"","description":"If supplied, only deals matching the given user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the filter to use","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"If supplied, only deals within the given stage will be returned.","in":"query","name":"stage_id","required":false,"type":"number"},{"default":"all_not_deleted","description":"Only fetch deals with specific status. If omitted, all not deleted deals are fetched.","enum":["open","won","lost","deleted","all_not_deleted"],"in":"query","name":"status","required":false,"type":"enumerated"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page. Default limit is 100, maximum limit is 500.","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).","in":"query","name":"sort","required":false,"type":"string"},{"default":"","description":"When supplied, only deals owned by you are returned. However filter_id takes precedence over owned_by_you when both are supplied.","enum":[0,1],"in":"query","name":"owned_by_you","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get all deals","tags":["Deals"]},"post":{"description":"Adds a new deal. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for 'key' values.","parameters":[{"default":"","description":"Deal title","in":"formData","name":"title","required":true,"type":"string"},{"default":"","description":"Value of the deal. If omitted, value will be set to 0.","in":"formData","name":"value","required":false,"type":"string"},{"default":"","description":"Currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.","in":"formData","name":"currency","required":false,"type":"string"},{"default":"","description":"ID of the user who will be marked as the owner of this deal. If omitted, the authorized user ID will be used.","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the person this deal will be associated with","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization this deal will be associated with","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"ID of the stage this deal will be placed in a pipeline (note that you can't supply the ID of the pipeline as this will be assigned automatically based on stage_id). If omitted, the deal will be placed in the first stage of the default pipeline.","in":"formData","name":"stage_id","required":false,"type":"number"},{"default":"","description":"open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.","enum":["open","won","lost","deleted"],"in":"formData","name":"status","required":false,"type":"enumerated"},{"default":"","description":"Deal success probability percentage. Used/shown only when deal_probability for the pipeline of the deal is enabled.","in":"formData","name":"probability","required":false,"type":"number"},{"default":"","description":"Optional message about why the deal was lost (to be used when status=lost)","in":"formData","name":"lost_reason","required":false,"type":"string"},{"default":"","description":"Optional creation date & time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS","in":"formData","name":"add_time","required":false,"type":"string"},{"default":"","description":"Visibility of the deal. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add a deal","tags":["Deals"]}},"/deals/find":{"get":{"description":"Searches all deals by their title.","parameters":[{"default":"","description":"Search term to look for","in":"query","name":"term","required":true,"type":"string"},{"default":"","description":"ID of the person deal is associated with.","in":"query","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization deal is associated with.","in":"query","name":"org_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Find deals by name","tags":["Deals"]}},"/deals/timeline":{"get":{"description":"Returns open and won deals, grouped by defined interval of time set in a date-type dealField (field_key) — e.g. when month is the chosen interval, and 3 months are asked starting from  January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given field_key.","parameters":[{"default":"","description":"Date where first interval starts. Format: YYYY-MM-DD","in":"query","name":"start_date","required":true,"type":"string"},{"default":"","description":"Type of interval.<dl class=\"fields-list\"><dt>day</dt><dd>Day</dd><dt>week</dt><dd>A full week (7 days) starting from start_date</dd><dt>month</dt><dd>A full month (depending on the number of days in given month) starting from start_date</dd><dt>quarter</dt><dd>A full quarter (3 months) starting from start_date</dd></dl>","enum":["day","week","month","quarter"],"in":"query","name":"interval","required":true,"type":"enumerated"},{"default":"","description":"Number of given intervals, starting from start_date, to fetch. E.g. 3 (months).","in":"query","name":"amount","required":true,"type":"number"},{"default":"","description":"The name of the date field by which to get deals by.","in":"query","name":"field_key","required":true,"type":"string"},{"default":"","description":"If supplied, only deals matching the given user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"If supplied, only deals matching the given pipeline will be returned.","in":"query","name":"pipeline_id","required":false,"type":"number"},{"default":"","description":"If supplied, only deals matching the given filter will be returned.","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned.","enum":[0,1],"in":"query","name":"exclude_deals","required":false,"type":"enumerated"},{"default":"","description":"3-letter currency code of any of the supported currencies. When supplied, totals_converted is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to 'default_currency' in which case users default currency is used.","in":"query","name":"totals_convert_currency","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get deals timeline","tags":["Deals"]}},"/deals/{id}":{"delete":{"description":"Marks a deal as deleted.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a deal","tags":["Deals"]},"get":{"description":"Returns details of a specific deal. Note that this also returns some additional fields which are not present when asking for all deals – such as deal age and stay in pipeline stages. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of dealFields.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get details of a deal","tags":["Deals"]},"put":{"description":"Updates the properties of a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Deal title","in":"formData","name":"title","required":false,"type":"string"},{"default":"","description":"Value of the deal","in":"formData","name":"value","required":false,"type":"string"},{"default":"","description":"Currency of the deal. Accepts a 3-character currency code","in":"formData","name":"currency","required":false,"type":"string"},{"default":"","description":"ID of the user who will be marked as the owner of this deal","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the person this deal will be associated with","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization this deal will be associated with","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"ID of the stage this deal will be placed in a pipeline (note that you can't supply the ID of the pipeline as this will be assigned automatically based on stage_id)","in":"formData","name":"stage_id","required":false,"type":"number"},{"default":"","description":"open = Open, won = Won, lost = Lost, deleted = Deleted","in":"formData","name":"status","required":false,"type":"enumerated string"},{"default":"","description":"Deal success probability percentage. Used/shown only when deal_probability for the pipeline of the deal is enabled.","in":"formData","name":"probability","required":false,"type":"number"},{"default":"","description":"Optional message about why the deal was lost (to be used when status=lost)","in":"formData","name":"lost_reason","required":false,"type":"string"},{"default":"","description":"Visibility of the deal. If omitted, visibility will not be changed.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update a deal","tags":["Deals"]}},"/deals/{id}/activities":{"get":{"description":"Lists activities associated with a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Whether to fetch done (1) or undone (0) activities. If omitted from request, both undone and done activities are fetched.","enum":[0,1],"in":"query","name":"done","required":false,"type":"enumerated"},{"default":"","description":"A comma-separated string of activity IDs to exclude from result","in":"query","name":"exclude","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List activities associated with a deal","tags":["Deals"]}},"/deals/{id}/duplicate":{"post":{"description":"Duplicate a deal","parameters":[{"default":"","description":"ID of the deal that will be duplicated","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Duplicate deal","tags":["Deals"]}},"/deals/{id}/files":{"get":{"description":"Lists files associated with a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.","enum":[0,1],"in":"query","name":"include_deleted_files","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List files attached to a deal","tags":["Deals"]}},"/deals/{id}/flow":{"get":{"description":"Lists updates about a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List updates about a deal","tags":["Deals"]}},"/deals/{id}/followers":{"get":{"description":"Lists the followers of a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List followers of a deal","tags":["Deals"]},"post":{"description":"Adds a follower to a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"formData","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a follower to a deal","tags":["Deals"]}},"/deals/{id}/followers/{follower_id}":{"delete":{"description":"Deletes a follower from a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the follower","in":"path","name":"follower_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a follower from a deal","tags":["Deals"]}},"/deals/{id}/mailMessages":{"get":{"description":"Lists mail messages associated with a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List mail messages associated with a deal","tags":["Deals"]}},"/deals/{id}/merge":{"put":{"description":"Merges a deal with another deal.","parameters":[{"default":"","description":"ID of the deal that will be merged","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the deal that the deal will be merged with","in":"formData","name":"merge_with_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Merge two deals","tags":["Deals"]}},"/deals/{id}/participants":{"get":{"description":"Lists participants associated with a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List participants of a deal","tags":["Deals"]},"post":{"description":"Adds a participant to a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the person","in":"formData","name":"person_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a participant to a deal","tags":["Deals"]}},"/deals/{id}/participants/{deal_participant_id}":{"delete":{"description":"Deletes a participant from a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the deal participant","in":"path","name":"deal_participant_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a participant from a deal","tags":["Deals"]}},"/deals/{id}/permittedUsers":{"get":{"description":"List users permitted to access a deal","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"If set, filter results by allowed access level. 1 = Read, 2 = Write, 3 = Read+Write","enum":[1,2,3],"in":"query","name":"access_level","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List permitted users","tags":["Deals"]}},"/deals/{id}/persons":{"get":{"description":"Lists all persons associated with a deal, regardless of whether the person is the primary contact of the deal, or added as a participant.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List all persons associated with a deal","tags":["Deals"]}},"/deals/{id}/products":{"get":{"description":"Lists products attached to a deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Whether to fetch product data along with each attached product (1) or not (0, default).","enum":[0,1],"in":"query","name":"include_product_data","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List products attached to a deal","tags":["Deals"]},"post":{"description":"Adds a product to the deal.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the product that will be attached","in":"formData","name":"product_id","required":true,"type":"number"},{"default":"","description":"Price at which this product will be added to the deal","in":"formData","name":"item_price","required":true,"type":"number"},{"default":"","description":"Quantity – e.g. how many items of this product will be added to the deal","in":"formData","name":"quantity","required":true,"type":"number"},{"default":"0","description":"Discount %. If omitted, will be set to 0","in":"formData","name":"discount_percentage","required":false,"type":"number"},{"default":"1","description":"Duration of the product (when product durations are not enabled for the company or if omitted, defaults to 1)","in":"formData","name":"duration","required":false,"type":"number"},{"default":"","description":"ID of the product variation to use. When omitted, no variation will be used.","in":"formData","name":"product_variation_id","required":false,"type":"number"},{"default":"","description":"Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.","in":"formData","name":"comments","required":false,"type":"string"},{"default":"","description":"Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with specific price and discount criteria - but keep them disabled, which refrains them from being included in deal price calculation. When omitted, the product will be marked as enabled by default.","enum":[0,1],"in":"formData","name":"enabled_flag","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add a product to the deal, eventually creating a new item called a deal-product.","tags":["Deals"]}},"/deals/{id}/products/{deal_product_id}":{"put":{"description":"Updates product attachment details.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the deal-product (the ID of the product attached to the deal)","in":"path","name":"deal_product_id","required":true,"type":"number"},{"default":"","description":"Price at which this product will be added to the deal","in":"formData","name":"item_price","required":true,"type":"number"},{"default":"","description":"Quantity – e.g. how many items of this product will be added to the deal","in":"formData","name":"quantity","required":true,"type":"number"},{"default":"0","description":"Discount %","in":"formData","name":"discount_percentage","required":false,"type":"number"},{"default":"1","description":"Duration of the product","in":"formData","name":"duration","required":false,"type":"number"},{"default":"","description":"ID of the product variation to use.","in":"formData","name":"product_variation_id","required":false,"type":"number"},{"default":"","description":"Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.","in":"formData","name":"comments","required":false,"type":"string"},{"default":"","description":"Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with specific price and discount criteria - but keep them disabled, which refrains them from being included in deal price calculation.","enum":[0,1],"in":"formData","name":"enabled_flag","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update product attachment details of the deal-product (a product already attached to a deal)","tags":["Deals"]}},"/deals/{id}/products/{product_attachment_id}":{"delete":{"description":"Deletes a product attachment from a deal, using the product_attachment_id.","parameters":[{"default":"","description":"ID of the deal","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Product attachment ID. This is returned as product_attachment_id after attaching a product to a deal or as id when listing the products attached to a deal.","in":"path","name":"product_attachment_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete an attached product from a deal","tags":["Deals"]}},"/files":{"get":{"description":"Returns data about all files.","parameters":[{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.","enum":[0,1],"in":"query","name":"include_deleted_files","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get all files","tags":["Files"]},"post":{"description":"Lets you upload a file, and associate it with a Deal, a Person, an Organization, an Activity or a Product.","parameters":[{"default":"","description":"A single file, supplied in the multipart/form-data encoding and contained within the given boundaries.","in":"formData","name":"file","required":true,"type":"file"},{"default":"","description":"ID of the deal to associate file(s) with.","in":"formData","name":"deal_id","required":false,"type":"number"},{"default":"","description":"ID of the person to associate file(s) with.","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization to associate file(s) with.","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"ID of the product to associate file(s) with.","in":"formData","name":"product_id","required":false,"type":"number"},{"default":"","description":"ID of the activity to associate file(s) with.","in":"formData","name":"activity_id","required":false,"type":"number"},{"default":"","description":"ID of the note to associate file(s) with.","in":"formData","name":"note_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add file","tags":["Files"]}},"/files/remote":{"post":{"description":"Creates a new empty file in the remote location (googledrive, etc) that will be linked to the item you supply.","parameters":[{"default":"","description":"The file type.","enum":["gdoc","gslides","gsheet","gform","gdraw"],"in":"formData","name":"file_type","required":true,"type":"enumerated"},{"default":"","description":"The title of the file.","in":"formData","name":"title","required":true,"type":"string"},{"default":"","description":"The item type.","enum":["deal","organization","person"],"in":"formData","name":"item_type","required":true,"type":"enumerated"},{"default":"","description":"ID of the item to associate the file with.","in":"formData","name":"item_id","required":true,"type":"number"},{"default":"","description":"The location type to send the file to. Only googledrive is supported at the moment.","enum":["googledrive"],"in":"formData","name":"remote_location","required":true,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Create a remote file and link it to an item","tags":["Files"]}},"/files/remoteLink":{"post":{"description":"Links an existing remote file (googledrive, etc) to the item you supply.","parameters":[{"default":"","description":"The item type.","enum":["deal","organization","person"],"in":"formData","name":"item_type","required":true,"type":"enumerated"},{"default":"","description":"ID of the item to associate the file with.","in":"formData","name":"item_id","required":true,"type":"number"},{"default":"","description":"The remote item id.","in":"formData","name":"remote_id","required":true,"type":"string"},{"default":"","description":"The location type to send the file to. Only googledrive is supported at the moment.","enum":["googledrive"],"in":"formData","name":"remote_location","required":true,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Link a remote file to an item","tags":["Files"]}},"/files/{id}":{"delete":{"description":"Marks a file as deleted.","parameters":[{"default":"","description":"ID of the file to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a file","tags":["Files"]},"get":{"description":"Returns data about a specific file.","parameters":[{"default":"","description":"ID of the file to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one file","tags":["Files"]},"put":{"description":"Updates the properties of a file.","parameters":[{"default":"","description":"ID of the file","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Visible name of the file","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"Description of the file","in":"formData","name":"description","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Update file details","tags":["Files"]}},"/files/{id}/download":{"get":{"description":"Initializes a file download.","parameters":[{"default":"","description":"ID of the file to download.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Download one file","tags":["Files"]}},"/filters":{"delete":{"description":"Marks multiple filters as deleted.","parameters":[{"default":"","description":"Comma-separated filter IDs to delete","in":"query","name":"ids","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple filters in bulk","tags":["Filters"]},"get":{"description":"Returns data about all filters","parameters":[{"default":"","description":"Type of filters to fetch.","enum":["deals","org","people","products","activity"],"in":"query","name":"type","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get all filters","tags":["Filters"]},"post":{"description":"Adds a new filter, returns the ID upon success. Note that in the conditions json object only one first-level condition group is supported, and it must be glued with 'AND', and only two second level condition groups are supported of which one must be glued with 'AND' and the second with 'OR'. Other combinations do not work (yet) but the syntax supports introducing them in future.","parameters":[{"default":"","description":"Filter name","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Filter conditions as a JSON object. It requires a minimum structure as follows: {\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}. Replace CONDITION_OBJECTS with JSON objects of the following structure: {\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"} or leave the array empty. Depending on the object type you should use another API endpoint to get field_id. There are five types of objects you can choose from: \"person\", \"deal\", \"organization\", \"product\", \"activity\" and you can use these types of operators depending on what type of a field you have: \"IS NOT NULL\", \"IS NULL\", \"<=\", \">=\", \"<\", \">\", \"!=\", \"=\", \"LIKE '%$%'\", \"NOT LIKE '%$%'\", \"LIKE '$%'\", \"NOT LIKE '$%'\", \"LIKE '%$'\", \"NOT LIKE '%$'\". To get a better understanding of how filters work try creating them directly from the Pipedrive application.","in":"body","name":"conditions","required":true,"type":"json string"},{"default":"","description":"Type of filter to create.","enum":["deals","org","people","products","activity"],"in":"formData","name":"type","required":true,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add a new filter","tags":["Filters"]}},"/filters/{id}":{"delete":{"description":"Marks a filter as deleted.","parameters":[{"default":"","description":"ID of the filter to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a filter","tags":["Filters"]},"get":{"description":"Returns data about a specific filter. Note that this also returns the condition lines of the filter.","parameters":[{"default":"","description":"ID of the filter to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one filter","tags":["Filters"]},"put":{"description":"Updates existing filter.","parameters":[{"default":"","description":"ID of the filter to update.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Filter name","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"Filter conditions as a JSON object. It requires a minimum structure as follows: {\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}. Replace CONDITION_OBJECTS with JSON objects of the following structure: {\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"} or leave the array empty. Depending on the object type you should use another API endpoint to get field_id. There are five types of objects you can choose from: \"person\", \"deal\", \"organization\", \"product\", \"activity\" and you can use these types of operators depending on what type of a field you have: \"IS NOT NULL\", \"IS NULL\", \"<=\", \">=\", \"<\", \">\", \"!=\", \"=\", \"LIKE '%$%'\", \"NOT LIKE '%$%'\", \"LIKE '$%'\", \"NOT LIKE '$%'\", \"LIKE '%$'\", \"NOT LIKE '%$'\". To get a better understanding of how filters work try creating them directly from the Pipedrive application.","in":"body","name":"conditions","required":true,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Update filter","tags":["Filters"]}},"/globalMessages":{"get":{"description":"Returns data about global messages to display for the authorized user.","parameters":[{"default":"1","description":"Number of messages to get from 1 to 100. 1 message is returned by default.","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get global messages","tags":["GlobalMessages"]}},"/globalMessages/{id}":{"delete":{"description":"Removes global message from being shown, if message is dismissible","parameters":[{"default":"","description":"ID of global message to be dismissed.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Dismiss a global message","tags":["GlobalMessages"]}},"/goals":{"get":{"description":"Returns data about all goals.","parameters":[{"default":"","description":"ID of the user who's goal to fetch. When omitted, only your goals will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"If provided, everyone's goals will be returned.","enum":[0,1],"in":"query","name":"everyone","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get all goals","tags":["Goals"]},"post":{"description":"Adds a new goal, returns the ID upon success.","parameters":[{"default":"stage","description":"Goal type.","enum":["stage","deal_close","predeal_convert"],"in":"formData","name":"goal_type","required":true,"type":"enumerated"},{"default":"expected_num","description":"Expected type.","enum":["expected_num","expected_sum"],"in":"formData","name":"expected_type","required":true,"type":"enumerated"},{"default":"","description":"ID of the user who will be associated with this goal. If omitted, the authorized user will be used.","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the stage. This field is required when goal_type = stage.","in":"formData","name":"stage_id","required":false,"type":"number"},{"default":"week","description":"Period of time.","enum":["week","2_weeks","4_weeks","month","2_months","3_months","4_months","5_months","6_months","year"],"in":"formData","name":"period","required":true,"type":"enumerated"},{"default":"","description":"Expected sum or number.","in":"formData","name":"expected","required":true,"type":"number"},{"default":"","description":"Currency of the goal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.","in":"formData","name":"currency","required":false,"type":"string"},{"default":"","description":"ID of the pipeline to add goal to.","in":"formData","name":"pipeline_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a new goal","tags":["Goals"]}},"/goals/{id}":{"delete":{"description":"Marks goal as deleted.","parameters":[{"default":"","description":"ID of the goal to mark as deleted.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete existing goal","tags":["Goals"]},"get":{"description":"Returns data about a specific goal.","parameters":[{"default":"","description":"ID of the goal to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get details of a goal","tags":["Goals"]},"put":{"description":"Updates the properties of a goal.","parameters":[{"default":"","description":"ID of the goal to update.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Goal type.","enum":["stage","deal_close","predeal_convert"],"in":"formData","name":"goal_type","required":true,"type":"enumerated"},{"default":"","description":"Expected type.","enum":["expected_num","expected_sum"],"in":"formData","name":"expected_type","required":true,"type":"enumerated"},{"default":"","description":"ID of the user who will be associated with this goal. If omitted, the authorized user will be used.","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the stage. This field is required when goal_type = stage.","in":"formData","name":"stage_id","required":false,"type":"number"},{"default":"","description":"Period of time.","enum":["week","2_weeks","4_weeks","month","2_months","3_months","4_months","5_months","6_months","year"],"in":"formData","name":"period","required":true,"type":"enumerated"},{"default":"","description":"Expected sum or number.","in":"formData","name":"expected","required":true,"type":"number"},{"default":"","description":"Currency of the goal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.","in":"formData","name":"currency","required":false,"type":"string"},{"default":"","description":"ID of the pipeline to add goal to.","in":"formData","name":"pipeline_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Update goal details","tags":["Goals"]}},"/goals/{id}/results":{"get":{"description":"Lists results of a specific goal.","parameters":[{"default":"","description":"ID of the goal to mark as deleted.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Start of the period. Date in format of YYYY-MM-DD.","in":"query","name":"period_start","required":false,"type":"date"},{"default":"","description":"End of the period. Date in format of YYYY-MM-DD.","in":"query","name":"period_end","required":false,"type":"date"}],"responses":{"200":{"description":"success"}},"summary":"Get results of one goal","tags":["Goals"]}},"/mailbox/mailMessages/{id}":{"get":{"description":"Returns data about specific mail message.","parameters":[{"default":"","description":"ID of the mail message to fetch.","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Whether to include full message body or not. 0 = Don't include, 1 = Include","enum":[0,1],"in":"query","name":"include_body","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get one mail message","tags":["MailMessages"]}},"/mailbox/mailThreads":{"get":{"description":"Returns mail threads in specified folder ordered by most recent message within.","parameters":[{"default":"inbox","description":"Type of folder to fetch.","enum":["inbox","drafts","sent","archive"],"in":"query","name":"folder","required":true,"type":"enumerated"},{"default":"","description":"Index of the first item. If not set, then equals 0.","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Amount of threads to fetch. If not set, then equals 50.","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get mail threads","tags":["MailThreads"]}},"/mailbox/mailThreads/{id}":{"delete":{"description":"Marks mail thread as deleted.","parameters":[{"default":"","description":"ID of the mail thread to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete mail thread","tags":["MailThreads"]},"get":{"description":"Returns specific mail thread.","parameters":[{"default":"","description":"ID of the mail thread to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one mail thread","tags":["MailThreads"]},"put":{"description":"Updates the properties of a mail thread.","parameters":[{"default":"","description":"ID of the mail thread","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the deal this thread is associated with","in":"formData","name":"deal_id","required":false,"type":"number"},{"default":"","description":"Whether this thread is shared with other users in your company","enum":[0,1],"in":"formData","name":"shared_flag","required":false,"type":"enumerated"},{"default":"","description":"Whether this thread read or unread","enum":[0,1],"in":"formData","name":"read_flag","required":false,"type":"enumerated"},{"default":0,"description":"Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox.","enum":[0,1],"in":"formData","name":"archived_flag","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update mail thread details","tags":["MailThreads"]}},"/mailbox/mailThreads/{id}/mailMessages":{"get":{"description":"Get mail messages inside specified mail thread.","parameters":[{"default":"","description":"ID of the mail thread.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get all mail messages of mail thread","tags":["MailThreads"]}},"/noteFields":{"get":{"description":"Return list of all fields for note","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all fields for a note","tags":["NoteFields"]}},"/notes":{"get":{"description":"Returns all notes","parameters":[{"default":"","description":"ID of the user who's notes to fetch. If omitted, notes by all users will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the deal whih notes to fetch. If omitted, notes about all deals with be returned.","in":"query","name":"deal_id","required":false,"type":"number"},{"default":"","description":"ID of the person whih notes to fetch. If omitted, notes about all persons with be returned.","in":"query","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization whih notes to fetch. If omitted, notes about all organizations with be returned.","in":"query","name":"org_id","required":false,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, content, add_time, update_time.","in":"query","name":"sort","required":false,"type":"string"},{"default":"","description":"Date in format of YYYY-MM-DD from which notes to fetch from.","in":"query","name":"start_date","required":false,"type":"date"},{"default":"","description":"Date in format of YYYY-MM-DD until which notes to fetch to.","in":"query","name":"end_date","required":false,"type":"date"},{"default":"","description":"If set, then results are filtered by note to deal pinning state.","enum":[0,1],"in":"query","name":"pinned_to_deal_flag","required":false,"type":"enumerated"},{"default":"","description":"If set, then results are filtered by note to organization pinning state.","enum":[0,1],"in":"query","name":"pinned_to_organization_flag","required":false,"type":"enumerated"},{"default":"","description":"If set, then results are filtered by note to person pinning state.","enum":[0,1],"in":"query","name":"pinned_to_person_flag","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get all notes","tags":["Notes"]},"post":{"description":"Adds a new note","parameters":[{"default":"","description":"Content of the note in HTML format. Subject to sanitization on the back-end.","in":"formData","name":"content","required":true,"type":"string"},{"default":"","description":"ID of the deal the note will be attached to.","in":"formData","name":"deal_id","required":false,"type":"number"},{"default":"","description":"ID of the person this note will be attached to","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization this note will be attached to","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"Optional creation date & time of the Note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS","in":"formData","name":"add_time","required":false,"type":"string"},{"default":"","description":"If set, then results are filtered by note to deal pinning state (deal_id is also required).","enum":[0,1],"in":"formData","name":"pinned_to_deal_flag","required":false,"type":"enumerated"},{"default":"","description":"If set, then results are filtered by note to organization pinning state (org_id is also required).","enum":[0,1],"in":"formData","name":"pinned_to_organization_flag","required":false,"type":"enumerated"},{"default":"","description":"If set, then results are filtered by note to person pinning state (person_id is also required).","enum":[0,1],"in":"formData","name":"pinned_to_person_flag","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add a note","tags":["Notes"]}},"/notes/{id}":{"delete":{"description":"Deletes a specific note.","parameters":[{"default":"","description":"ID of the note","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a note","tags":["Notes"]},"get":{"description":"Returns details about a specific note.","parameters":[{"default":"","description":"ID of the note","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one note","tags":["Notes"]},"put":{"description":"Updates a note","parameters":[{"default":"","description":"ID of the note","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Content of the note in HTML format. Subject to sanitization on the back-end.","in":"formData","name":"content","required":true,"type":"string"},{"default":"","description":"ID of the deal the note will be attached to.","in":"formData","name":"deal_id","required":false,"type":"number"},{"default":"","description":"ID of the person this note will be attached to","in":"formData","name":"person_id","required":false,"type":"number"},{"default":"","description":"ID of the organization this note will be attached to","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"Optional creation date & time of the Note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS","in":"formData","name":"add_time","required":false,"type":"string"},{"default":"","description":"If set, then results are filtered by note to deal pinning state.","enum":[0,1],"in":"formData","name":"pinned_to_deal_flag","required":false,"type":"enumerated"},{"default":"","description":"If set, then results are filtered by note to organization pinning state.","enum":[0,1],"in":"formData","name":"pinned_to_organization_flag","required":false,"type":"enumerated"},{"default":"","description":"If set, then results are filtered by note to person pinning state.","enum":[0,1],"in":"formData","name":"pinned_to_person_flag","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update a note","tags":["Notes"]}},"/organizationFields":{"delete":{"description":"Marks multiple fields as deleted.","parameters":[{"default":"","description":"Comma-separated field IDs to delete","in":"query","name":"ids","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple organization fields in bulk","tags":["OrganizationFields"]},"get":{"description":"Returns data about all organization fields","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all organization fields","tags":["OrganizationFields"]},"post":{"description":"Adds a new organization field","parameters":[{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Type of the field.<dl class=\"fields-list\"><dt>varchar</dt><dd>Text (up to 255 characters)</dd><dt>varchar_auto</dt><dd>Autocomplete text (up to 255 characters)</dd><dt>text</dt><dd>Long text (up to 65k characters)</dd><dt>double</dt><dd>Numeric value</dd><dt>monetary</dt><dd>Monetary field (has a numeric value and a currency value)</dd><dt>date</dt><dd>Date (format YYYY-MM-DD)</dd><dt>set</dt><dd>Options field with a possibility of having multiple chosen options</dd><dt>enum</dt><dd>Options field with a single possible chosen option</dd><dt>user</dt><dd>User field (contains a user ID of another Pipedrive user)</dd><dt>org</dt><dd>Organization field (contains an organization ID which is stored on the same account)</dd><dt>people</dt><dd>Person field (contains a person ID which is stored on the same account)</dd><dt>phone</dt><dd>Phone field (up to 255 numbers and/or characters)</dd><dt>time</dt><dd>Time field (format HH:MM:SS)</dd><dt>timerange</dt><dd>Time-range field (has a start time and end time value, both HH:MM:SS)</dd><dt>daterange</dt><dd>Date-range field (has a start date and end date value, both YYYY-MM-DD)</dd></dl>","enum":["varchar","varchar_auto","text","double","monetary","date","set","enum","user","org","people","phone","time","timerange","daterange"],"in":"formData","name":"field_type","required":true,"type":"enumerated"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Add a new organization field","tags":["OrganizationFields"]}},"/organizationFields/{id}":{"delete":{"description":"Marks a field as deleted.","parameters":[{"default":"","description":"ID of the field to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete an organization field","tags":["OrganizationFields"]},"get":{"description":"Returns data about a specific organization field.","parameters":[{"default":"","description":"ID of the field to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one organization field","tags":["OrganizationFields"]},"put":{"description":"Updates an organization field","parameters":[{"default":"","description":"ID of the field to update.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Update an organization field","tags":["OrganizationFields"]}},"/organizationRelationships":{"get":{"description":"Gets all of the relationships for a supplied organization id.","parameters":[{"default":"","description":"ID of the organization to get relationships for","in":"query","name":"org_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get all relationships for organization","tags":["OrganizationRelationships"]},"post":{"description":"Creates and returns an organization relationship.","parameters":[{"default":"","description":"ID of the base organization for the returned calculated values","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"The type of organization relationship.","enum":["parent","related"],"in":"formData","name":"type","required":true,"type":"enumerated"},{"default":"","description":"The owner of this relationship. If type is 'parent', then the owner is the parent and the linked organization is the daughter.","in":"formData","name":"rel_owner_org_id","required":true,"type":"number"},{"default":"","description":"The linked organization in this relationship. If type is 'parent', then the linked organization is the daughter.","in":"formData","name":"rel_linked_org_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Create an organization relationship","tags":["OrganizationRelationships"]}},"/organizationRelationships/{id}":{"delete":{"description":"Deletes an organization relationship and returns the deleted id.","parameters":[{"default":"","description":"ID of the organization relationship","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete an organization relationship","tags":["OrganizationRelationships"]},"get":{"description":"Finds and returns an organization relationship from its ID.","parameters":[{"default":"","description":"ID of the organization relationship","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the base organization for the returned calculated values","in":"query","name":"org_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one organization relationship","tags":["OrganizationRelationships"]},"put":{"description":"Updates and returns an organization relationship.","parameters":[{"default":"","description":"ID of the organization relationship","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the base organization for the returned calculated values","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"The type of organization relationship.","enum":["parent","related"],"in":"formData","name":"type","required":false,"type":"enumerated"},{"default":"","description":"The owner of this relationship. If type is 'parent', then the owner is the parent and the linked organization is the daughter.","in":"formData","name":"rel_owner_org_id","required":false,"type":"number"},{"default":"","description":"The linked organization in this relationship. If type is 'parent', then the linked organization is the daughter.","in":"formData","name":"rel_linked_org_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Update an organization relationship","tags":["OrganizationRelationships"]}},"/organizations":{"delete":{"description":"Marks multiple organizations as deleted.","parameters":[{"default":"","description":"Comma-separated IDs that will be deleted","in":"query","name":"ids","required":true,"type":"array"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple organizations in bulk","tags":["Organizations"]},"get":{"description":"Returns all organizations","parameters":[{"default":"","description":"If supplied, only organizations owned by the given user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the filter to use","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"If supplied, only organizations whose name starts with the specified letter will be returned (case insensitive).","in":"query","name":"first_char","required":false,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get all organizations","tags":["Organizations"]},"post":{"description":"Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for 'key' values.","parameters":[{"default":"","description":"Organization name","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.","in":"formData","name":"owner_id","required":false,"type":"number"},{"default":"","description":"Visibility of the organization. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"},{"default":"","description":"Optional creation date & time of the organization in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS","in":"formData","name":"add_time","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Add an organization","tags":["Organizations"]}},"/organizations/find":{"get":{"description":"Searches all organizations by their name.","parameters":[{"default":"","description":"Search term to look for","in":"query","name":"term","required":true,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Find organizations by name","tags":["Organizations"]}},"/organizations/{id}":{"delete":{"description":"Marks an organization as deleted.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete an organization","tags":["Organizations"]},"get":{"description":"Returns details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of organizationFields.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get details of an organization","tags":["Organizations"]},"put":{"description":"Updates the properties of an organization.","parameters":[{"default":"","description":"Organization ID","in":"path","name":"id","required":false,"type":"number"},{"default":"","description":"Organization name","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.","in":"formData","name":"owner_id","required":false,"type":"number"},{"default":"","description":"Visibility of the organization. If omitted, visibility will not be changed.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update an organization","tags":["Organizations"]}},"/organizations/{id}/activities":{"get":{"description":"Lists activities associated with an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Whether to fetch done (1) or undone (0) activities. If omitted from request, both undone and done activities are fetched.","enum":[0,1],"in":"query","name":"done","required":false,"type":"enumerated"},{"default":"","description":"A comma-separated string of activity IDs to exclude from result","in":"query","name":"exclude","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List activities associated with an organization","tags":["Organizations"]}},"/organizations/{id}/deals":{"get":{"description":"Lists deals associated with an organization.","parameters":[{"default":"","description":"ID of an organization","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"all_not_deleted","description":"Only fetch deals with specific status. If omitted, all not deleted deals are fetched.","enum":["open","won","lost","deleted","all_not_deleted"],"in":"query","name":"status","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).","in":"query","name":"sort","required":false,"type":"string"},{"default":"","description":"If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization.","enum":[0,1],"in":"query","name":"only_primary_association","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List deals associated with an organization","tags":["Organizations"]}},"/organizations/{id}/files":{"get":{"description":"Lists files associated with an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.","enum":[0,1],"in":"query","name":"include_deleted_files","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List files attached to an organization","tags":["Organizations"]}},"/organizations/{id}/flow":{"get":{"description":"Lists updates about an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List updates about an organization","tags":["Organizations"]}},"/organizations/{id}/followers":{"get":{"description":"Lists the followers of an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List followers of an organization","tags":["Organizations"]},"post":{"description":"Adds a follower to an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"formData","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a follower to an organization","tags":["Organizations"]}},"/organizations/{id}/followers/{follower_id}":{"delete":{"description":"Deletes a follower from an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the follower","in":"path","name":"follower_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a follower from an organization","tags":["Organizations"]}},"/organizations/{id}/mailMessages":{"get":{"description":"Lists mail messages associated with an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List mail messages associated with an organization","tags":["Organizations"]}},"/organizations/{id}/merge":{"put":{"description":"Merges an organization with another organization.","parameters":[{"default":"","description":"ID of the organization that will be merged","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the organization that the organization will be merged with","in":"formData","name":"merge_with_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Merge two organizations","tags":["Organizations"]}},"/organizations/{id}/permittedUsers":{"get":{"description":"List users permitted to access an organization","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"If set, filter results by allowed access level. 1 = Read, 2 = Write, 3 = Read+Write","enum":[1,2,3],"in":"query","name":"access_level","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List permitted users","tags":["Organizations"]}},"/organizations/{id}/persons":{"get":{"description":"Lists persons associated with an organization.","parameters":[{"default":"","description":"ID of the organization","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List persons of an organization","tags":["Organizations"]}},"/permissionSets":{"get":{"description":"","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all permission sets","tags":["PermissionSets"]}},"/permissionSets/{id}":{"get":{"description":"","parameters":[{"default":"","description":"ID of the permission set","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one permission set","tags":["PermissionSets"]},"put":{"description":"","parameters":[{"default":"","description":"ID of the permission set","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Permissions that this set contains as JSON or ordinary comma separated string. Possible permission names are: can_change_visibility_of_items, can_see_company_wide_statistics, can_delete_deals, can_see_deals_list_summary, can_export_data_from_lists, can_see_other_users_statistics","in":"body","name":"contents","required":true,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Update permission set details","tags":["PermissionSets"]}},"/permissionSets/{id}/assignments":{"delete":{"description":"Delete assignment from a permission set","parameters":[{"default":"","description":"ID of the permission set","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"query","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a permission set assignment","tags":["PermissionSets"]},"get":{"description":"List assignments for a permission set","parameters":[{"default":"","description":"ID of the permission set","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List permission set assignments","tags":["PermissionSets"]},"post":{"description":"Add assignment for a permission set","parameters":[{"default":"","description":"ID of the permission set","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"formData","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add permission set assignment","tags":["PermissionSets"]}},"/personFields":{"delete":{"description":"Marks multiple fields as deleted.","parameters":[{"default":"","description":"Comma-separated field IDs to delete","in":"query","name":"ids","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple person fields in bulk","tags":["PersonFields"]},"get":{"description":"Returns data about all person fields","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all person fields","tags":["PersonFields"]},"post":{"description":"Adds a new person field","parameters":[{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Type of the field.<dl class=\"fields-list\"><dt>varchar</dt><dd>Text (up to 255 characters)</dd><dt>varchar_auto</dt><dd>Autocomplete text (up to 255 characters)</dd><dt>text</dt><dd>Long text (up to 65k characters)</dd><dt>double</dt><dd>Numeric value</dd><dt>monetary</dt><dd>Monetary field (has a numeric value and a currency value)</dd><dt>date</dt><dd>Date (format YYYY-MM-DD)</dd><dt>set</dt><dd>Options field with a possibility of having multiple chosen options</dd><dt>enum</dt><dd>Options field with a single possible chosen option</dd><dt>user</dt><dd>User field (contains a user ID of another Pipedrive user)</dd><dt>org</dt><dd>Organization field (contains an organization ID which is stored on the same account)</dd><dt>people</dt><dd>Person field (contains a person ID which is stored on the same account)</dd><dt>phone</dt><dd>Phone field (up to 255 numbers and/or characters)</dd><dt>time</dt><dd>Time field (format HH:MM:SS)</dd><dt>timerange</dt><dd>Time-range field (has a start time and end time value, both HH:MM:SS)</dd><dt>daterange</dt><dd>Date-range field (has a start date and end date value, both YYYY-MM-DD)</dd></dl>","enum":["varchar","varchar_auto","text","double","monetary","date","set","enum","user","org","people","phone","time","timerange","daterange"],"in":"formData","name":"field_type","required":true,"type":"enumerated"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Add a new person field","tags":["PersonFields"]}},"/personFields/{id}":{"delete":{"description":"Marks a field as deleted.","parameters":[{"default":"","description":"ID of the field to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a person field","tags":["PersonFields"]},"get":{"description":"Returns data about a specific person field.","parameters":[{"default":"","description":"ID of the field to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one person field","tags":["PersonFields"]},"put":{"description":"Updates a person field","parameters":[{"default":"","description":"ID of the field to update.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Update a person field","tags":["PersonFields"]}},"/persons":{"delete":{"description":"Marks multiple persons as deleted.","parameters":[{"default":"","description":"Comma-separated IDs that will be deleted","in":"query","name":"ids","required":true,"type":"array"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple persons in bulk","tags":["Persons"]},"get":{"description":"Returns all persons","parameters":[{"default":"","description":"If supplied, only persons owned by the given user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the filter to use","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"If supplied, only persons whose name starts with the specified letter will be returned (case insensitive).","in":"query","name":"first_char","required":false,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get all persons","tags":["Persons"]},"post":{"description":"Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for 'key' values.","parameters":[{"default":"","description":"Person name","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used.","in":"formData","name":"owner_id","required":false,"type":"number"},{"default":"","description":"ID of the organization this person will belong to.","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"Email addresses (one or more) associated with the person, presented in the same manner as received by GET request of a person.","in":"formData","name":"email","required":false,"type":"array"},{"default":"","description":"Phone numbers (one or more) associated with the person, presented in the same manner as received by GET request of a person.","in":"formData","name":"phone","required":false,"type":"array"},{"default":"","description":"Visibility of the person. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"},{"default":"","description":"Optional creation date & time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS","in":"formData","name":"add_time","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Add a person","tags":["Persons"]}},"/persons/find":{"get":{"description":"Searches all persons by their name.","parameters":[{"default":"","description":"Search term to look for","in":"query","name":"term","required":true,"type":"string"},{"default":"","description":"ID of the organization person is associated with.","in":"query","name":"org_id","required":false,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, term will only be matched against email addresses of people. Default: false","enum":[0,1],"in":"query","name":"search_by_email","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Find persons by name","tags":["Persons"]}},"/persons/{id}":{"delete":{"description":"Marks a person as deleted.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a person","tags":["Persons"]},"get":{"description":"Returns details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of personFields.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get details of a person","tags":["Persons"]},"put":{"description":"Updates the properties of a person.","parameters":[{"default":"","description":"Person ID","in":"path","name":"id","required":false,"type":"number"},{"default":"","description":"Person name","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used.","in":"formData","name":"owner_id","required":false,"type":"number"},{"default":"","description":"ID of the organization this person will belong to.","in":"formData","name":"org_id","required":false,"type":"number"},{"default":"","description":"Email addresses (one or more) associated with the person, presented in the same manner as received by GET request of a person.","in":"formData","name":"email","required":false,"type":"array"},{"default":"","description":"Phone numbers (one or more) associated with the person, presented in the same manner as received by GET request of a person.","in":"formData","name":"phone","required":false,"type":"array"},{"default":"","description":"Visibility of the person. If omitted, visibility will not be changed.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update a person","tags":["Persons"]}},"/persons/{id}/activities":{"get":{"description":"Lists activities associated with a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Whether to fetch done (1) or undone (0) activities. If omitted from request, both undone and done activities are fetched.","enum":[0,1],"in":"query","name":"done","required":false,"type":"enumerated"},{"default":"","description":"A comma-separated string of activity IDs to exclude from result","in":"query","name":"exclude","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List activities associated with a person","tags":["Persons"]}},"/persons/{id}/deals":{"get":{"description":"Lists deals associated with a person.","parameters":[{"default":"","description":"ID of a person","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"all_not_deleted","description":"Only fetch deals with specific status. If omitted, all not deleted deals are fetched.","enum":["open","won","lost","deleted","all_not_deleted"],"in":"query","name":"status","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List deals associated with a person","tags":["Persons"]}},"/persons/{id}/files":{"get":{"description":"Lists files associated with a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.","enum":[0,1],"in":"query","name":"include_deleted_files","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List files attached to a person","tags":["Persons"]}},"/persons/{id}/flow":{"get":{"description":"Lists updates about a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List updates about a person","tags":["Persons"]}},"/persons/{id}/followers":{"get":{"description":"Lists the followers of a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List followers of a person","tags":["Persons"]},"post":{"description":"Adds a follower to a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"formData","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a follower to a person","tags":["Persons"]}},"/persons/{id}/followers/{follower_id}":{"delete":{"description":"Deletes a follower from a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the follower","in":"path","name":"follower_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a follower from a person","tags":["Persons"]}},"/persons/{id}/mailMessages":{"get":{"description":"Lists mail messages associated with a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List mail messages associated with a person","tags":["Persons"]}},"/persons/{id}/merge":{"put":{"description":"Merges a person with another person.","parameters":[{"default":"","description":"ID of the person that will be merged","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the person that the person will be merged with","in":"formData","name":"merge_with_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Merge two persons","tags":["Persons"]}},"/persons/{id}/permittedUsers":{"get":{"description":"List users permitted to access a person","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"If set, filter results by allowed access level. 1 = Read, 2 = Write, 3 = Read+Write","enum":[1,2,3],"in":"query","name":"access_level","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List permitted users","tags":["Persons"]}},"/persons/{id}/picture":{"delete":{"description":"Delete person picture","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete person picture","tags":["Persons"]},"post":{"description":"Add a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"One image supplied in the multipart/form-data encoding.","in":"formData","name":"file","required":true,"type":"file"},{"default":"","description":"X coordinate to where start cropping form (in pixels)","in":"formData","name":"crop_x","required":false,"type":"number"},{"default":"","description":"Y coordinate to where start cropping form (in pixels)","in":"formData","name":"crop_y","required":false,"type":"number"},{"default":"","description":"Width of cropping area (in pixels)","in":"formData","name":"crop_width","required":false,"type":"number"},{"default":"","description":"Height of cropping area (in pixels)","in":"formData","name":"crop_height","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add person picture","tags":["Persons"]}},"/persons/{id}/products":{"get":{"description":"Lists products associated with a person.","parameters":[{"default":"","description":"ID of the person","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List products associated with a person","tags":["Persons"]}},"/pipelines":{"get":{"description":"Returns data about all pipelines","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all pipelines","tags":["Pipelines"]},"post":{"description":"Adds a new pipeline","parameters":[{"default":"","description":"Name of the pipeline","in":"formData","name":"name","required":false,"type":"string"},{"default":0,"description":"Whether deal probability is disabled or enabled for this pipeline.","enum":[0,1],"in":"formData","name":"deal_probability","required":false,"type":"enumerated"},{"default":"","description":"Defines pipelines order. First order(order_nr=0) is the default pipeline.","in":"formData","name":"order_nr","required":false,"type":"number"},{"default":"1","description":"Whether this pipeline will be made inactive (hidden) or active","enum":[0,1],"in":"formData","name":"active","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add a new pipeline","tags":["Pipelines"]}},"/pipelines/{id}":{"delete":{"description":"Marks a pipeline as deleted.","parameters":[{"default":"","description":"ID of the pipeline to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a pipeline","tags":["Pipelines"]},"get":{"description":"Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages.","parameters":[{"default":"","description":"ID of the pipeline to fetch.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"3-letter currency code of any of the supported currencies. When supplied, per_stages_converted is returned in deals_summary which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to 'default_currency' in which case users default currency is used.","in":"query","name":"totals_convert_currency","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get one pipeline","tags":["Pipelines"]},"put":{"description":"Updates pipeline properties","parameters":[{"default":"","description":"ID of the pipeline to fetch.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the pipeline","in":"formData","name":"name","required":false,"type":"string"},{"default":0,"description":"Whether deal probability is disabled or enabled for this pipeline.","enum":[0,1],"in":"formData","name":"deal_probability","required":false,"type":"enumerated"},{"default":"","description":"Defines pipelines order. First order(order_nr=0) is the default pipeline.","in":"formData","name":"order_nr","required":false,"type":"number"},{"default":"","description":"Whether this pipeline will be made inactive (hidden) or active","enum":[0,1],"in":"formData","name":"active","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Edit a pipeline","tags":["Pipelines"]}},"/pipelines/{id}/conversion_statistics":{"get":{"description":"Returns all stage-to-stage conversion and pipeline-to-close rates for given time period.","parameters":[{"default":"","description":"ID of the pipeline.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Start of the period. Date in format of YYYY-MM-DD.","in":"query","name":"start_date","required":true,"type":"date"},{"default":"","description":"End of the period. Date in format of YYYY-MM-DD.","in":"query","name":"end_date","required":true,"type":"date"},{"default":"","description":"ID of the user who's pipeline metrics statistics to fetch. If omitted, the authorized user will be used.","in":"query","name":"user_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get deals conversion rates in pipeline","tags":["Pipelines"]}},"/pipelines/{id}/deals":{"get":{"description":"Lists deals in a specific pipeline across all its stages","parameters":[{"default":"","description":"ID of the pipeline to fetch.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"If supplied, only deals matching the given filter will be returned.","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"If supplied, filter_id and user_id will not be considered – instead, deals owned by everyone will be returned.","enum":[0,1],"in":"query","name":"everyone","required":false,"type":"enumerated"},{"default":"","description":"If supplied, only deals within the given stage will be returned.","in":"query","name":"stage_id","required":false,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Whether to include summary of the pipeline in the additional_data or not.","enum":[0,1],"in":"query","name":"get_summary","required":false,"type":"enumerated"},{"default":"","description":"3-letter currency code of any of the supported currencies. When supplied, per_stages_converted is returned inside deals_summary inside additional_data which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to 'default_currency' in which case users default currency is used. Only works when get_summary parameter flag is enabled.","in":"query","name":"totals_convert_currency","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Get deals in a pipeline","tags":["Pipelines"]}},"/pipelines/{id}/movement_statistics":{"get":{"description":"Returns statistics for deals movements for given time period.","parameters":[{"default":"","description":"ID of the pipeline.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Start of the period. Date in format of YYYY-MM-DD.","in":"query","name":"start_date","required":true,"type":"date"},{"default":"","description":"End of the period. Date in format of YYYY-MM-DD.","in":"query","name":"end_date","required":true,"type":"date"},{"default":"","description":"ID of the user who's pipeline statistics to fetch. If omitted, the authorized user will be used.","in":"query","name":"user_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get deals movements in pipeline","tags":["Pipelines"]}},"/productFields":{"delete":{"description":"Marks multiple fields as deleted.","parameters":[{"default":"","description":"Comma-separated field IDs to delete","in":"query","name":"ids","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple product fields in bulk","tags":["ProductFields"]},"get":{"description":"Returns data about all product fields","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all product fields","tags":["ProductFields"]},"post":{"description":"Adds a new product field","parameters":[{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Type of the field.<dl class=\"fields-list\"><dt>varchar</dt><dd>Text (up to 255 characters)</dd><dt>varchar_auto</dt><dd>Autocomplete text (up to 255 characters)</dd><dt>text</dt><dd>Long text (up to 65k characters)</dd><dt>double</dt><dd>Numeric value</dd><dt>monetary</dt><dd>Monetary field (has a numeric value and a currency value)</dd><dt>date</dt><dd>Date (format YYYY-MM-DD)</dd><dt>set</dt><dd>Options field with a possibility of having multiple chosen options</dd><dt>enum</dt><dd>Options field with a single possible chosen option</dd><dt>user</dt><dd>User field (contains a user ID of another Pipedrive user)</dd><dt>org</dt><dd>Organization field (contains an organization ID which is stored on the same account)</dd><dt>people</dt><dd>Person field (contains a product ID which is stored on the same account)</dd><dt>phone</dt><dd>Phone field (up to 255 numbers and/or characters)</dd><dt>time</dt><dd>Time field (format HH:MM:SS)</dd><dt>timerange</dt><dd>Time-range field (has a start time and end time value, both HH:MM:SS)</dd><dt>daterange</dt><dd>Date-range field (has a start date and end date value, both YYYY-MM-DD)</dd></dl>","enum":["varchar","varchar_auto","text","double","monetary","date","set","enum","user","org","people","phone","time","timerange","daterange"],"in":"formData","name":"field_type","required":true,"type":"enumerated"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Add a new product field","tags":["ProductFields"]}},"/productFields/{id}":{"delete":{"description":"Marks a field as deleted.","parameters":[{"default":"","description":"ID of the field to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a product field","tags":["ProductFields"]},"get":{"description":"Returns data about a specific product field.","parameters":[{"default":"","description":"ID of the field to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one product field","tags":["ProductFields"]},"put":{"description":"Updates a product field","parameters":[{"default":"","description":"ID of the field to update.","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the field","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]","in":"body","name":"options","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Update a product field","tags":["ProductFields"]}},"/products":{"get":{"description":"Returns data about all products","parameters":[{"default":"","description":"If supplied, only products owned by the given user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"ID of the filter to use","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"If supplied, only products whose name starts with the specified letter will be returned (case insensitive).","in":"query","name":"first_char","required":false,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get all products","tags":["Products"]},"post":{"description":"Adds a new product to the products inventory.","parameters":[{"default":"","description":"Name of the product.","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Product code.","in":"formData","name":"code","required":false,"type":"string"},{"default":"","description":"Unit in which this product is sold","in":"formData","name":"unit","required":false,"type":"string"},{"default":"0","description":"Tax percentage","in":"formData","name":"tax","required":false,"type":"number"},{"default":1,"description":"Whether this product will be made active or not.","enum":[0,1],"in":"formData","name":"active_flag","required":false,"type":"enumerated"},{"default":"","description":"Visibility of the product. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"},{"default":"","description":"ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.","in":"formData","name":"owner_id","required":false,"type":"number"},{"default":"","description":"Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional). Note that there can only be one price per product per currency. When 'prices' is omitted altogether, no prices will be set up for the product.","in":"body","name":"prices","required":false,"type":"json string"}],"responses":{"200":{"description":"success"}},"summary":"Add a product","tags":["Products"]}},"/products/find":{"get":{"description":"Returns data about the products that were found. If currency was set in request, prices in that currency are served back.","parameters":[{"default":"","description":"Search term to look for, minimum 3 characters.","in":"query","name":"term","required":true,"type":"string"},{"default":"","description":"Currency code in which prices should be returned in. If omitted, prices in user's default currency will be returned.","in":"query","name":"currency","required":false,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Find products by name","tags":["Products"]}},"/products/{id}":{"delete":{"description":"Marks a product as deleted.","parameters":[{"default":"","description":"ID of the product to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a product","tags":["Products"]},"get":{"description":"Returns data about a specific products","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one product","tags":["Products"]},"put":{"description":"Updates product data.","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the product.","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"Product code.","in":"formData","name":"code","required":false,"type":"string"},{"default":"","description":"Unit in which this product is sold","in":"formData","name":"unit","required":false,"type":"string"},{"default":"0","description":"Tax percentage","in":"formData","name":"tax","required":false,"type":"number"},{"default":1,"description":"Whether this product will be made active or not.","enum":[0,1],"in":"formData","name":"active_flag","required":false,"type":"enumerated"},{"default":"","description":"Visibility of the product. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>","enum":[1,3],"in":"formData","name":"visible_to","required":false,"type":"enumerated"},{"default":"","description":"ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.","in":"formData","name":"owner_id","required":false,"type":"number"},{"default":"","description":"Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional). Note that there can only be one price per product per currency. When 'prices' is omitted altogether, product pricing will not be changed.","in":"formData","name":"prices","required":false,"type":"array"}],"responses":{"200":{"description":"success"}},"summary":"Update a product","tags":["Products"]}},"/products/{id}/deals":{"get":{"description":"Returns data about a deals that have a product attached to.","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"all_not_deleted","description":"Only fetch deals with specific status. If omitted, all not deleted deals are fetched.","enum":["open","won","lost","deleted","all_not_deleted"],"in":"query","name":"status","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Get deals where a product is attached to","tags":["Products"]}},"/products/{id}/files":{"get":{"description":"Lists files associated with a product.","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.","enum":[0,1],"in":"query","name":"include_deleted_files","required":false,"type":"enumerated"},{"default":"","description":"Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.","in":"query","name":"sort","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"List files attached to a product","tags":["Products"]}},"/products/{id}/followers":{"get":{"description":"Lists the followers of a product.","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List followers of a product","tags":["Products"]},"post":{"description":"Adds a follower to a product.","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"formData","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a follower to a product","tags":["Products"]}},"/products/{id}/followers/{follower_id}":{"delete":{"description":"Deletes a follower from a product.","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the follower","in":"path","name":"follower_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a follower from a product","tags":["Products"]}},"/products/{id}/permittedUsers":{"get":{"description":"List users permitted to access a product","parameters":[{"default":"","description":"ID of the product","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"If set, filter results by allowed access level. 1 = Read, 2 = Write, 3 = Read+Write","enum":[1,2,3],"in":"query","name":"access_level","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List permitted users","tags":["Products"]}},"/recents":{"get":{"description":"Returns data about all recent changes occured after given timestamp.","parameters":[{"default":"","description":"Timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS","in":"query","name":"since_timestamp","required":true,"type":"string"},{"default":"","description":"Multiple selection of item types to include in query (optional)","enum":["activity","activityType","deal","delete_log","file","filter","note","person","organization","pipeline","product","stage","user"],"in":"query","name":"items","required":false,"type":"enumerated"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get recents","tags":["Recents"]}},"/roles":{"get":{"description":"","parameters":[{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get all roles","tags":["Roles"]},"post":{"description":"","parameters":[{"default":"","description":"","in":"formData","name":"parent_role_id","required":false,"type":"number"},{"default":"","description":"","in":"formData","name":"name","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Add a role","tags":["Roles"]}},"/roles/{id}":{"delete":{"description":"","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a role","tags":["Roles"]},"get":{"description":"","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one role","tags":["Roles"]},"put":{"description":"","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"","in":"formData","name":"parent_role_id","required":false,"type":"number"},{"default":"","description":"","in":"formData","name":"name","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Update role details","tags":["Roles"]}},"/roles/{id}/assignments":{"delete":{"description":"Delete assignment from a role","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"query","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a role assignment","tags":["Roles"]},"get":{"description":"List assignments for a role","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List role assignments","tags":["Roles"]},"post":{"description":"Add assignment for a role","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the user","in":"formData","name":"user_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add role assignment","tags":["Roles"]}},"/roles/{id}/roles":{"get":{"description":"","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List role sub-roles","tags":["Roles"]}},"/roles/{id}/settings":{"get":{"description":"","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List role settings","tags":["Roles"]},"post":{"description":"","parameters":[{"default":"","description":"ID of the role","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"","enum":["deal_default_visibility","org_default_visibility","person_default_visibility","product_default_visibility","deal_access_level","org_access_level","person_access_level","product_access_level"],"in":"formData","name":"setting_key","required":true,"type":"enumerated"},{"default":"0","description":"Possible values for default_visibility settings: 0...1; for access_level settings: 1...7","enum":[0,1,2,3,4,5,6,7],"in":"formData","name":"value","required":true,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add or update role setting","tags":["Roles"]}},"/searchResults":{"get":{"description":"Performs a search across the account and returns SearchResults.","parameters":[{"default":"","description":"Search term to look for, minimum 2 characters.","in":"query","name":"term","required":true,"type":"string"},{"default":"","description":"Search for items of exact type. If omitted, all types of items are searched.","enum":["deal","person","organization","product","file"],"in":"query","name":"item_type","required":false,"type":"enumerated"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"When enabled, only full exact matches against the given term are returned. The minimum 2 character limit for the term is discarded when exact_match is enabled. It will only work if search term is 30 characters or less.","enum":[0,1],"in":"query","name":"exact_match","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Perform a search","tags":["SearchResults"]}},"/searchResults/field":{"get":{"description":"Performs a search from a specific field's values. Results can be either the distinct values of the field (useful for searching autocomplete field values), or actual items IDs (deals, persons, organizations or products). Works only with the following field types: varchar, varchar_auto, double, address, text, phone, date.","parameters":[{"default":"","description":"Search term to look for, minimum 2 characters.","in":"query","name":"term","required":true,"type":"string"},{"default":"","description":"When enabled, only full exact matches against the given term are returned. By default, term can be present anywhere in the resulting field values to be considered a match. The minimum 2 character limit for the term is discarded when exact_match is enabled.","enum":[0,1],"in":"query","name":"exact_match","required":false,"type":"enumerated"},{"default":"","description":"Type of the field to perform the search from.","enum":["dealField","personField","organizationField","productField"],"in":"query","name":"field_type","required":true,"type":"enumerated"},{"default":"","description":"Key of the field to search from. Field key can be obtained by fetching the list of fields using any of fields API GET methods (dealFields, personFields, ..).","in":"query","name":"field_key","required":true,"type":"string"},{"default":"","description":"Name of the field in search results from which the search was performed. When omitted, 'value' will be used. You may want to set this parameter to match the field_key.","in":"query","name":"return_field_key","required":false,"type":"string"},{"default":"","description":"Whether to return matching items IDs in search results. When omitted or set to 0, only distinct values of the searched field are returned. When enabled, the return_field_key parameter is ignored and the results include the searched field as its own key.","enum":[0,1],"in":"query","name":"return_item_ids","required":false,"type":"enumerated"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Perform a search using a specific field value","tags":["SearchResults"]}},"/stages":{"delete":{"description":"Marks multiple stages as deleted.","parameters":[{"default":"","description":"Comma-separated stage IDs to delete","in":"query","name":"ids","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete multiple stages in bulk","tags":["Stages"]},"get":{"description":"Returns data about all stages","parameters":[{"default":"","description":"ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched.","in":"query","name":"pipeline_id","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get all stages","tags":["Stages"]},"post":{"description":"Adds a new stage, returns the ID upon success.","parameters":[{"default":"","description":"Name of the stage","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"ID of the pipeline to add stage to.","in":"formData","name":"pipeline_id","required":true,"type":"number"},{"default":"","description":"Deal success probability percentage. Used/shown when deal weighted values are used.","in":"formData","name":"deal_probability","required":false,"type":"number"},{"default":"","description":"Whether deals in this stage can become rotten.","enum":[0,1],"in":"formData","name":"rotten_flag","required":false,"type":"enumerated"},{"default":"","description":"Number of days the deals not updated in this stage would become rotten. Applies only if rotten_flag is set.","in":"formData","name":"rotten_days","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add a new stage","tags":["Stages"]}},"/stages/{id}":{"delete":{"description":"Marks a stage as deleted.","parameters":[{"default":"","description":"ID of the stage to delete","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a stage","tags":["Stages"]},"get":{"description":"Returns data about a specific stage","parameters":[{"default":"","description":"ID of the stage","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one stage","tags":["Stages"]},"put":{"description":"Updates the properties of a stage.","parameters":[{"default":"","description":"ID of the stage","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Name of the stage","in":"formData","name":"name","required":false,"type":"string"},{"default":"","description":"ID of the pipeline this stage belongs to.","in":"formData","name":"pipeline_id","required":false,"type":"number"},{"default":"","description":"An order number for this stage. Order numbers should be used to order the stages in the pipeline.","in":"formData","name":"order_nr","required":false,"type":"number"},{"default":"","description":"Deal success probability percentage. Used/shown when deal weighted values are used.","in":"formData","name":"deal_probability","required":false,"type":"number"},{"default":"","description":"Whether deals in this stage can become rotten.","enum":[0,1],"in":"formData","name":"rotten_flag","required":false,"type":"enumerated"},{"default":"","description":"Number of days the deals not updated in this stage would become rotten. Applies only if rotten_flag is set.","in":"formData","name":"rotten_days","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Update stage details","tags":["Stages"]}},"/stages/{id}/deals":{"get":{"description":"Lists deals in a specific stage","parameters":[{"default":"","description":"ID of the stage","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"If supplied, only deals matching the given filter will be returned.","in":"query","name":"filter_id","required":false,"type":"number"},{"default":"","description":"If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.","in":"query","name":"user_id","required":false,"type":"number"},{"default":"","description":"If supplied, filter_id and user_id will not be considered – instead, deals owned by everyone will be returned.","enum":[0,1],"in":"query","name":"everyone","required":false,"type":"enumerated"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get deals in a stage","tags":["Stages"]}},"/userConnections":{"get":{"description":"Returns data about all connections for authorized user.","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all user connections","tags":["UserConnections"]}},"/userSettings":{"get":{"description":"Lists settings of authorized user.","parameters":[],"responses":{"200":{"description":"success"}},"summary":"List settings of authorized user","tags":["UserSettings"]}},"/users":{"get":{"description":"Returns data about all users within the company","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all users","tags":["Users"]},"post":{"description":"Adds a new user to the company, returns the ID upon success.","parameters":[{"default":"","description":"Name of the user","in":"formData","name":"name","required":true,"type":"string"},{"default":"","description":"Email of the user","in":"formData","name":"email","required":true,"type":"string"},{"default":"1","description":"Whether the user is active or not. 0 = Not activated, 1 = Activated","enum":["0","1"],"in":"formData","name":"active_flag","required":true,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Add a new user","tags":["Users"]}},"/users/find":{"get":{"description":"Finds users by their name.","parameters":[{"default":"","description":"Search term to look for","in":"query","name":"term","required":true,"type":"string"},{"default":"","description":"When enabled, term will only be matched against email addresses of users. Default: false","enum":[0,1],"in":"query","name":"search_by_email","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Find users by name","tags":["Users"]}},"/users/me":{"get":{"description":"Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the 'locale' property means 'Date and number format' in the Pipedrive settings, not the chosen language.","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get current user data","tags":["Users"]}},"/users/{id}":{"get":{"description":"Returns data about a specific user within the company","parameters":[{"default":"","description":"ID of the user to fetch.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Get one user","tags":["Users"]},"put":{"description":"Updates the properties of a user. Currently, only active_flag can be updated.","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"1","description":"Whether the user is active or not. 0 = Not activated, 1 = Activated","enum":["0","1"],"in":"formData","name":"active_flag","required":true,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"Update user details","tags":["Users"]}},"/users/{id}/activities":{"get":{"deprecated":true,"description":"Lists activities assigned to a specific user, with optional due_date and type filtering.","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Either a due date in YYYY-MM-DD format, or one of the following: all, overdue, today, tomorrow, this_week, next_week","in":"query","name":"due_date","required":false,"type":"date or string"},{"default":"","description":"Filter activities based on ActivityType's key_string (examples: call, meeting)","in":"query","name":"type","required":false,"type":"string"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"},{"default":"","description":"Whether to fetch done (1) or undone (0) activities. If omitted from request, both undone and done activities are fetched.","enum":[0,1],"in":"query","name":"done","required":false,"type":"enumerated"}],"responses":{"200":{"description":"success"}},"summary":"List and filter activities assigned to a specific user","tags":["Users"]}},"/users/{id}/blacklistedEmails":{"get":{"description":"Lists blacklisted email addresses of a specific user. Blacklisted emails are such that will not get synced in to Pipedrive when using the built-in Mailbox.","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List blacklisted email addresses of a user","tags":["Users"]},"post":{"description":"Add blacklisted email address for a specific user.","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"Email address to blacklist (can contain \\* for wildcards, e.g. \\*@example.com, or john\\*@ex\\*.com)","in":"formData","name":"address","required":true,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Add blacklisted email address for a user","tags":["Users"]}},"/users/{id}/followers":{"get":{"description":"Lists followers of a specific user.","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List followers of a user","tags":["Users"]}},"/users/{id}/permissionSetAssignments":{"delete":{"description":"Delete a permission set assignment for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the permission set","in":"query","name":"permission_set_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a permission set assignment","tags":["Users"]},"get":{"description":"List permission set assignments for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List permission set assignments","tags":["Users"]},"post":{"description":"Add permission set assignment for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the permission set","in":"formData","name":"permission_set_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add permission set assignment","tags":["Users"]}},"/users/{id}/permissions":{"get":{"description":"List aggregated permissions over all assigned permission sets for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List user permissions","tags":["Users"]}},"/users/{id}/roleAssignments":{"delete":{"description":"Delete a role assignment for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the role","in":"query","name":"role_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete a role assignment","tags":["Users"]},"get":{"description":"List role assignments for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"0","description":"Pagination start","in":"query","name":"start","required":false,"type":"number"},{"default":"","description":"Items shown per page","in":"query","name":"limit","required":false,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List role assignments","tags":["Users"]},"post":{"description":"Add role assignment for a user","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"},{"default":"","description":"ID of the role","in":"formData","name":"role_id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Add role assignment","tags":["Users"]}},"/users/{id}/roleSettings":{"get":{"description":"List settings of user's assigned role","parameters":[{"default":"","description":"ID of the user","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"List user role settings","tags":["Users"]}},"/webhooks":{"get":{"description":"Returns data about all webhooks of a company.","parameters":[],"responses":{"200":{"description":"success"}},"summary":"Get all webhooks","tags":["Webhooks"]},"post":{"description":"Creates a new webhook and returns its details. Note that specifying an event which triggers the webhook combines 2 parameters - 'event_action' and 'event_object'. E.g., use '\\*.\\*' for getting notifications about all events, 'added.deal' for any newly added deals, 'deleted.persons' for any deleted persons, etc. See https://pipedrive.readme.io/docs/guide-for-webhooks for more details.","parameters":[{"default":"","description":"A full, valid, publicly accessible URL. Determines where to send the notifications. Please note that you cannot use Pipedrive API endpoints as the subscription_url.","in":"formData","name":"subscription_url","required":true,"type":"string"},{"default":"","description":"Type of action to receive notifications about. Wildcard will match all supported actions.","enum":["added","updated","merged","deleted","*"],"in":"formData","name":"event_action","required":true,"type":"enumerated"},{"default":"","description":"Type of object to receive notifications about. Wildcard will match all supported objects.","enum":["activity","activityType","deal","note","organization","person","pipeline","product","stage","user","*"],"in":"formData","name":"event_object","required":true,"type":"enumerated"},{"default":"","description":"ID of the user this webhook will be authorized with. If not set, current authorized user will be used. Note that this does not filter only certain user's events — rather, this specifies the user's permissions under which each event is checked. Events about objects the selected user is not entitled to access are not sent. If you want to receive notifications for all events, a top-level admin user should be used.","in":"formData","name":"user_id","required":false,"type":"number"},{"default":"","description":"HTTP basic auth username of the subscription URL endpoint (if required).","in":"formData","name":"http_auth_user","required":false,"type":"string"},{"default":"","description":"HTTP basic auth password of the subscription URL endpoint (if required).","in":"formData","name":"http_auth_password","required":false,"type":"string"}],"responses":{"200":{"description":"success"}},"summary":"Create a new webhook","tags":["Webhooks"]}},"/webhooks/{id}":{"delete":{"description":"Deletes the specified webhook.","parameters":[{"default":"","description":"ID of the webhook to delete.","in":"path","name":"id","required":true,"type":"number"}],"responses":{"200":{"description":"success"}},"summary":"Delete existing webhook","tags":["Webhooks"]}}},"schemes":["https"],"securityDefinitions":{"api_key":{"in":"query","name":"api_token","type":"apiKey"}},"swagger":"2.0","tags":[{"description":"Activities are appointments/tasks/events on a calendar that can be associated with a Deal, a Person and an Organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular User. Note that activities can also be created without a specific date/time.","name":"Activities"},{"description":"ActivityFields represent different fields that Activity has.","name":"ActivityFields"},{"description":"ActivityTypes represent different kinds of activities that can be stored. Each ActivityType is presented to the user with an icon and a name. Additionally, a color can be defined (not implemented in the Pipedrive app as of today). ActivityTypes are linked to Activities via ActivityType.key_string = Activity.type. The key_string will be generated by the API based on the given name of the ActivityType upon creation, and cannot be changed. ActivityTypes should be presented to the user in an ordered manner, using the ActivityType.order_nr value.","name":"ActivityTypes"},{"description":"Authorization objects can be fetched without an API token but using an email and password. Fetching the Authorization objects essentially allows you to authorize users based on their login credentials and retrieve the underlying API tokens associated with the given user. Note that any given user an Authorization object per each company he/she belongs to.","name":"Authorizations"},{"description":"Supported currencies which can be used to represent the monetary value of a Deal, or a value of any monetary type custom field. The Currency.code field must be used to point to a currency. Currency.code is the ISO-4217 format currency code for non-custom currencies. You can differentiate custom and non-custom currencies using the is_custom_flag property. For custom currencies, it is intended that the formatted sums are displayed in the UI using the following format: [sum][non-breaking space character][currency.symbol], for example: 500 users. Custom currencies cannot be added or removed via the API yet — rather the admin users of the account must configure them from the Pipedrive app.","name":"Currencies"},{"description":"Deals represent ongoing, lost or won sales to an Organization or to a Person. Each deal has a monetary value and must be placed in a Stage. Deals can be owned by a User, and followed by one or many Users. Each Deal consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys. These hashes can be mapped against DealField.key. The corresponding label for each such custom field can be obtained from DealField.name.","name":"Deals"},{"description":"DealFields represent the near-complete schema for a Deal in the context of the company of the authorized user. Each company can have a different schema for their Deals, with various custom fields. In the context of using DealFiels as a schema for defining the data fields of a Deal, it must be kept in mind that some types of custom fields can have additional data fields which are not separate DealFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of DealFields. For example, if there is a monetary field with the key 'ffk9s9' stored on the account, 'ffk9s9' would hold the numeric value of the field, and 'ffk9s9_currency' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Deal and list its keys.","name":"DealFields"},{"description":"Files are documents of any kind (images, spreadsheets, text files, etc) that are uploaded to Pipedrive, and usually associated with a particular Deal, Person or Organization. Note that the API currently does not support downloading files although it lets you retrieve file meta info along retrieve a download URL where the file can be downloaded using a standard HTTP GET request.","name":"Files"},{"description":"Each filter is essentially a set of data validation conditions. A filter of the same kind can be applied when fetching list of Deals, Persons, Organizations, Products or Deals in the context of a Pipeline. When applied, only items matching the conditions of the filter are returned. Detailed definitions of filter conditions and additional functionality is not yet available.","name":"Filters"},{"description":"Get or dismiss global messages","name":"GlobalMessages"},{"description":"Goals help your team meet your sales targets. All goals are automatically carried over to the next period, e.g. when a week ends all the active weekly goals are automatically started for the next week as well. This means less hassle for you.","name":"Goals"},{"description":"MailMessages represent mail messages that are being synced with Piperive using the 2-way sync or the Smart Email BCC feature. Messages are grouped in threads.","name":"MailMessages"},{"description":"MailThreads represent mail threads which contain individual mail messages.","name":"MailThreads"},{"description":"Notes are pieces of textual (HTML-formatted) information that can be attached to Deals, Persons and Organizations. Notes are usually displayed in the UI in a chronological order – newest first – and in context with other updates regarding the item they are attached to.","name":"Notes"},{"description":"NoteFields represent different fields that Note has.","name":"NoteFields"},{"description":"OrganizationFields represent the near-complete schema for an Organization in the context of the company of the authorized user. Each company can have a different schema for their Organizations, with various custom fields. In the context of using OrganizationFiels as a schema for defining the data fields of an Organization, it must be kept in mind that some types of custom fields can have additional data fields which are not separate OrganizationFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of OrganizationFields. For example, if there is a monetary field with the key 'ffk9s9' stored on the account, 'ffk9s9' would hold the numeric value of the field, and 'ffk9s9_currency' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Organization and list its keys.","name":"OrganizationFields"},{"description":"Organizations are companies and other kinds of organizations you are making Deals with. Persons can be associated with organizations so that each organization can contain one or more Persons.","name":"Organizations"},{"description":"","name":"OrganizationRelationships"},{"description":"","name":"PermissionSets"},{"description":"Persons are your contacts, the customers you are doing Deals with. Each Person can belong to an Organization. Persons should not be confused with Users.","name":"Persons"},{"description":"PersonFields represent the near-complete schema for a Person in the context of the company of the authorized user. Each company can have a different schema for their Persons, with various custom fields. In the context of using PersonFields as a schema for defining the data fields of a Person, it must be kept in mind that some types of custom fields can have additional data fields which are not separate PersonFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of PersonFields. For example, if there is a monetary field with the key 'ffk9s9' stored on the account, 'ffk9s9' would hold the numeric value of the field, and 'ffk9s9_currency' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Person and list its keys.","name":"PersonFields"},{"description":"Pipelines are essentially ordered collections of Stages.","name":"Pipelines"},{"description":"Products are the goods or services you are dealing with. Each product can have N different price points - first, each Product can have a price in N different currencies, and secondly, each Product can have N variations of itself, each having N prices different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to Deals. In the context of instatiation, a custom price, quantity, duration and discount can be applied.","name":"Products"},{"description":"ProductFields represent the near-complete schema for a Product in the context of the company of the authorized user. Each company can have a different schema for their Products, with various custom fields. In the context of using ProductFields as a schema for defining the data fields of a Product, it must be kept in mind that some types of custom fields can have additional data fields which are not separate ProductFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of ProductFields. For example, if there is a monetary field with the key 'ffk9s9' stored on the account, 'ffk9s9' would hold the numeric value of the field, and 'ffk9s9_currency' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Product and list its keys.","name":"ProductFields"},{"description":"Recent changes across all item types in Pipedrive (deals, persons, etc).","name":"Recents"},{"description":"","name":"Roles"},{"description":"Ordered reference objects, pointing to either Deals, Persons, Organizations, Files or Products.","name":"SearchResults"},{"description":"Stage is a logical component of a Pipeline, and essentially a bucket that can hold a number of Deals. In the context of the Pipeline a stage belongs to, it has an order number which defines the order of stages in that Pipeline.","name":"Stages"},{"description":"Users are people with access to your Pipedrive account. A user may belong to one or many Pipedrive accounts, so deleting a user from one Pipedrive account will not remove the user from the data store if he/she is connected to multiple accounts. Users should not be confused with Persons.","name":"Users"},{"description":"Manage user connections.","name":"UserConnections"},{"description":"User settings","name":"UserSettings"},{"description":"See https://pipedrive.readme.io/docs/guide-for-webhooks for more info about webhooks.","name":"Webhooks"}]}